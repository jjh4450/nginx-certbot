# ─────────────────────────────────────────────
#  NGINX CONFIGURATION TEMPLATE
# ─────────────────────────────────────────────
# This configuration provides a secure, production-ready setup for:
# • Reverse proxy with upstream server
# • HTTPS termination with Let's Encrypt
# • WebSocket support (optional)
# • Modular structure using include files
# • CORS & security enforcement via reusable modules

# ────── CORS ORIGIN MAP ──────
# Dynamically map incoming Origin headers to allowlist
map $http_origin $allowed_origin {
    default "";
    "https://example.com" $http_origin;
    # Add additional domains as needed
}

# ────── 🔐 HTTPS SERVER BLOCK (PORT 443) ──────
server {
    listen 443 ssl http2;                # Enable HTTP/2 and SSL
    server_name example.com;             # Domain for SSL
    server_tokens off;                   # Hide Nginx version

    # ▶ SSL Certificates
    ssl_certificate     /etc/letsencrypt/live/example.com/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/example.com/privkey.pem;
    include             /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam         /etc/letsencrypt/ssl-dhparams.pem;

    include /etc/nginx/conf.d/cors/cors.conf;

    # ▶ Security Settings
    include /etc/nginx/conf.d/security/security.conf;

    # ▶ Main Application Proxy
    location / {
        include /etc/nginx/conf.d/proxy/proxy.conf;  # Common proxy headers
        include /etc/nginx/conf.d/cors/cors.conf;    # CORS header injection
        # client_max_body_size <your option>;
        proxy_pass http://your.server;
    }

    # ▶ WebSocket Support (optional)
    # location /ws/socket.io/ {
    #     proxy_pass http://your.server;
    #     proxy_set_header Upgrade $http_upgrade;
    #     proxy_set_header Connection "upgrade";
    #     include /etc/nginx/conf.d/proxy/proxy.conf;
    # }
}

# ────── HTTP TO HTTPS REDIRECTION ──────
server {
    listen 80;
    server_name example.com;
    server_tokens off;

    include /etc/nginx/conf.d/security/security.conf;

    # ACME Challenge (Let's Encrypt)
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }

    # Redirect all HTTP requests to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}
