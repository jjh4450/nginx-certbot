# map $http_origin $allowed_origin {
#     default "";
#     "https://aeat.jeje.work" $http_origin;
#     "http://localhost:5173" $http_origin;
# }

# server {
#     listen 443 ssl;
#     server_name beaeatbe.jeje.work;

#     ssl_certificate /etc/letsencrypt/live/beaeatbe.jeje.work/fullchain.pem; # managed by Certbot
#     ssl_certificate_key /etc/letsencrypt/live/beaeatbe.jeje.work/privkey.pem; # managed by Certbot
#     include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
#     ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

#     location / {

#     client_max_body_size 20m;

# 	if ($request_method = OPTIONS) {
#             add_header "Access-Control-Allow-Origin" $allowed_origin;
#             add_header "Access-Control-Allow-Methods" "GET, POST, PUT, PATCH, DELETE, OPTIONS";
#             add_header "Access-Control-Allow-Headers" "Authorization, Content-Type";
#             return 204;
#         }

#         if ($http_cf_connecting_ip = "") {
#             return 444; # if CF proxy was not used
#         }

# 	proxy_pass http://AEat_prod:8080;
#         proxy_set_header Host $host;
#         proxy_set_header X-Real-IP $remote_addr;
#         proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
#         proxy_set_header X-Forwarded-Proto $scheme;
#     }

# }

# server {
#     listen 80;
#     server_name beaeatbe.jeje.work;

#     # Let's Encrypt 인증 요청 처리
#     location /.well-known/acme-challenge/ {
#         root /var/www/certbot;
#     }

#     # 모든 다른 요청에 대해 CF-Connecting-IP가 없으면 444 반환
#     location / {
#         if ($http_cf_connecting_ip = "") {
#             return 444; # if CF proxy was not used
#         }
#         return 301 https://$host$request_uri;
#     }
# }


# # Upstream configuration (if needed)
# #upstream AEat_prod {
# #    server AEat_prod:8081;
# #}
